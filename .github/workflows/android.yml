name: Compile on Android

on:
  push:
    branches: [ develop ]
    paths-ignore:
      - ".gitignore"
      - "README.md"
      # ignore CI for other platforms
      - ".github/workflows/api.yml"
      - ".github/workflows/ios.yml"
      - ".github/workflows/linux.yml"
      - ".github/workflows/macos.yml"

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout enroute
      uses: actions/checkout@v4
      with:
        path: enroute
        submodules: recursive
        fetch-depth: 0
    - name: Checkout enrouteDependencies
      uses: actions/checkout@v4
      with:
        path: enrouteDependencies
        repository: Akaflieg-Freiburg/enrouteDependencies
        submodules: recursive
    - name: Install Qt for Android arm64
      uses: jurplel/install-qt-action@v4
      with:
        aqtversion: ==3.1.*
        cache: 'true'
        cache-key-prefix: 'install-qt-action-android'
        modules: 'qt5compat qtconnectivity qthttpserver qtimageformats qtlocation qtmultimedia qtpositioning qtsensors qtserialport qtshadertools qtspeech qtwebsockets qtwebview'
        target: 'android'
        version: '6.8.0'
        arch: 'android_arm64_v8a'
    - name: Set up OpenJDK 17
      uses: actions/setup-java@v4
      with:
        distribution: adopt
        java-version: 17
    - name: Setup ninja
      uses: seanmiddleditch/gha-setup-ninja@v5
    - name: Install Additional Software
      run: |
        echo "y" | ${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager "platforms;android-34" "platform-tools" "build-tools;34.0.0"
        echo "y" | ${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager "ndk;26.1.10909125"
        echo ANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/26.1.10909125 >> $GITHUB_ENV
    - name: Remove Unwanted Software
      run: |
        echo "y" | ${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager --uninstall "platforms;android-33-ext4" "platforms;android-33-ext5" "platforms;android-34-ext8" "platforms;android-35-ext14"
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: android
    - name: Compile and Install libzip
      run: |
        export QT_HOST_PATH="$(readlink -f "$QT_ROOT_DIR/../gcc_64")"
        $QT_ROOT_DIR/bin/qt-cmake \
          -S enrouteDependencies/libzip \
          -B build-libzip \
          -G Ninja  \
          -DBUILD_DOC=OFF \
          -DBUILD_EXAMPLES=OFF \
          -DBUILD_REGRESS=OFF \
          -DBUILD_SHARED_LIBS=OFF \
          -DBUILD_TOOLS=OFF \
          -DENABLE_BZIP2=OFF \
          -DENABLE_LZMA=OFF \
          -DENABLE_ZSTD=OFF \
          -DCMAKE_INSTALL_PREFIX=$QT_ROOT_DIR
        cmake --build build-libzip
        cmake --install build-libzip
    - name: Compile and Install maplibre-native-qt
      run: |
        export QT_HOST_PATH="$(readlink -f "$QT_ROOT_DIR/../gcc_64")"
        $QT_ROOT_DIR/bin/qt-cmake \
          -S enrouteDependencies/maplibre-native-qt \
          -B build-maplibre-native-qt \
          -G Ninja \
          -DBUILD_TESTING=OFF \
          -DCMAKE_C_COMPILER_LAUNCHER="ccache" \
          -DCMAKE_CXX_COMPILER_LAUNCHER="ccache" \
          -DCMAKE_PREFIX_PATH=$QT_ROOT_DIR \
          -DCMAKE_INSTALL_PREFIX=$QT_ROOT_DIR
        cmake --build build-maplibre-native-qt
        cmake --install build-maplibre-native-qt
    - name: Compile Enroute
      run: |
        export QT_HOST_PATH="$(readlink -f "$QT_ROOT_DIR/../gcc_64")"
        $QT_ROOT_DIR/bin/qt-cmake \
          -S enroute \
          -B build-enroute\
          -G Ninja\
          -DCMAKE_BUILD_TYPE:STRING=Debug
        cmake --build build-enroute
    - name: Upload to developerBuilds
      run: |
        gh release upload --clobber developerBuilds ../build-enroute/src/android-build//build/outputs/apk/debug/android-build-debug.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      working-directory: enroute
