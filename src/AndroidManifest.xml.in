<?xml version='1.0' encoding='utf-8'?>
<manifest package="de.akaflieg_freiburg.enroute"
	  xmlns:android="http://schemas.android.com/apk/res/android"
	  android:versionName="${PROJECT_VERSION}"
	  android:versionCode="${PROJECT_VERSION_CODE}0"
	  android:installLocation="auto">
  <uses-sdk android:minSdkVersion="23" android:targetSdkVersion="31"/>
  
  <!-- The following comment will be replaced upon deployment with default permissions based on the dependencies of the application.
       Remove the comment if you do not require these default permissions. -->
  <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>
  <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
  <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
  <uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>
  <uses-permission android:name="android.permission.INTERNET" />
  <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
  <uses-permission android:name="android.permission.VIBRATE"/>
  <uses-permission android:name="android.permission.WAKE_LOCK" />
  <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />

  <!-- The following comment will be replaced upon deployment with default features based on the dependencies of the application.
       Remove the comment if you do not require these default features. -->
  
  
  <supports-screens android:largeScreens="true" android:normalScreens="true" android:anyDensity="true" android:smallScreens="true"/>
  
  <application android:hardwareAccelerated="true"
	       android:name="org.qtproject.qt.android.bindings.QtApplication"
	       android:label="Enroute Flight Navigation"
               android:icon="@mipmap/ic_launcher"
	       android:requestLegacyExternalStorage="true">
    <activity android:configChanges="orientation|uiMode|screenLayout|screenSize|smallestScreenSize|layoutDirection|locale|fontScale|keyboard|keyboardHidden|navigation|mcc|mnc|density"
	      android:exported="true"
	      android:name="de.akaflieg_freiburg.enroute.MobileAdaptor"
              android:label="Enroute Flight Navigation"
              android:screenOrientation="unspecified"
              android:launchMode="singleInstance"
              android:showWhenLocked="true"
	      android:theme="@style/SplashScreenTheme"
              android:windowSoftInputMode="adjustResize">
      <intent-filter>
        <action android:name="android.intent.action.MAIN"/>
        <category android:name="android.intent.category.LAUNCHER"/>
      </intent-filter>
      
      <!--
          Beginning of Intent Filters for Sending and Viewing Files.
          Apparently is important to include "application/octet-stream"
          as other apps seem to send gpx files as application/octet-stream
          see https://en.wikipedia.org/wiki/GPS_Exchange_Format
	  
          android.intent.action.VIEW used for receiving files for viewing (or "open with...")
          android.intent.action.SEND enables enroute as "share with" target
	  
          (Zellner, 2020-03-03)
      -->
      
      <!-- receive content from other app as "share with" -->
      <intent-filter>
        <action android:name="android.intent.action.SEND"/>
        <category android:name="android.intent.category.DEFAULT"/>
        <data android:mimeType="application/gpx+xml"/>
      </intent-filter>
      <intent-filter>
        <action android:name="android.intent.action.SEND"/>
        <category android:name="android.intent.category.DEFAULT"/>
        <data android:mimeType="application/gpx"/>
      </intent-filter>
      <intent-filter>
        <action android:name="android.intent.action.SEND"/>
        <category android:name="android.intent.category.DEFAULT"/>
        <data android:mimeType="application/octet-stream"/>
      </intent-filter>
      <intent-filter>
        <action android:name="android.intent.action.SEND"/>
        <category android:name="android.intent.category.DEFAULT"/>
        <data android:mimeType="text/gpx"/>
      </intent-filter>
      <intent-filter>
        <action android:name="android.intent.action.SEND"/>
        <category android:name="android.intent.category.DEFAULT"/>
        <data android:mimeType="text/xml"/>
      </intent-filter>
      
      <!-- receive content from other app as "open with" -->
      <intent-filter>
        <action android:name="android.intent.action.VIEW"/>
        <category android:name="android.intent.category.DEFAULT"/>
        <data android:mimeType="application/gpx+xml"/>
      </intent-filter>
      <intent-filter>
        <action android:name="android.intent.action.VIEW"/>
        <category android:name="android.intent.category.DEFAULT"/>
        <data android:mimeType="application/gpx"/>
      </intent-filter>
      <intent-filter>
        <action android:name="android.intent.action.VIEW"/>
        <category android:name="android.intent.category.DEFAULT"/>
        <data android:mimeType="application/octet-stream"/>
      </intent-filter>
      <intent-filter>
        <action android:name="android.intent.action.VIEW"/>
        <category android:name="android.intent.category.DEFAULT"/>
        <data android:mimeType="text/gpx"/>
      </intent-filter>
      <intent-filter>
        <action android:name="android.intent.action.VIEW"/>
        <category android:name="android.intent.category.DEFAULT"/>
        <data android:mimeType="text/xml"/>
      </intent-filter>
      <!-- End of Intent Filters for Sending and Viewing Files -->
      
      <!-- Application arguments -->
      <!-- meta-data android:name="android.app.arguments" android:value="arg1 arg2 arg3"/ -->
      <!-- Application arguments -->
      
      <meta-data android:name="android.app.lib_name" android:value="enroute"/>
      
      <!--  Messages maps -->
      <meta-data android:value="@string/unsupported_android_version" android:name="android.app.unsupported_android_version"/>
      <!--  Messages maps -->
      
      <!-- Splash screen -->
      <!-- Orientation-specific (portrait/landscape) data is checked first. If not available for current orientation,
           then android.app.splash_screen_drawable. For best results, use together with splash_screen_sticky and
           use hideSplashScreen() with a fade-out animation from Qt Android Extras to hide the splash screen when you
           are done populating your window with content. -->
      <!-- meta-data android:name="android.app.splash_screen_drawable_portrait" android:resource="@drawable/logo_portrait" / -->
      <!-- meta-data android:name="android.app.splash_screen_drawable_landscape" android:resource="@drawable/logo_landscape" / -->
      <!-- meta-data android:name="android.app.splash_screen_drawable" android:resource="@drawable/logo"/ -->
      <!-- meta-data android:name="android.app.splash_screen_sticky" android:value="true"/ -->
      <!-- Splash screen -->
      
      <!-- Splash screen -->
      <meta-data android:name="android.app.splash_screen_drawable" android:resource="@drawable/splash"/>
      <meta-data android:name="android.app.splash_screen_sticky" android:value="true"/>
      <!-- Splash screen -->
      
	
      <!-- Background running -->
      <!-- Warning: changing this value to true may cause unexpected crashes if the
           application still try to draw after
           "applicationStateChanged(Qt::ApplicationSuspended)"
           signal is sent! -->
      <meta-data android:name="android.app.background_running" android:value="false"/>
      <!-- Background running -->
      
      <!-- auto screen scale factor -->
      <meta-data android:name="android.app.auto_screen_scale_factor" android:value="false"/>
      <!-- auto screen scale factor -->
      
      <!-- extract android style -->
      <!-- available android:values :
           * default - In most cases this will be the same as "full", but it can also be something else if needed, e.g., for compatibility reasons
           * full - useful QWidget & Quick Controls 1 apps
           * minimal - useful for Quick Controls 2 apps, it is much faster than "full"
           * none - useful for apps that don't use any of the above Qt modules
      -->
      <meta-data android:name="android.app.extract_android_style" android:value="none"/>
      <!-- extract android style -->
    </activity>
    
    <!-- For adding service(s) please check: https://wiki.qt.io/AndroidServices -->
    
    <!-- NOTE: android:authorities must match AUTHORITY in de/akaflieg_freiburg/enroute/IntentLauncher.java -->
    <provider
        android:name="android.support.v4.content.FileProvider"
        android:authorities="de.akaflieg_freiburg.enroute"
        android:exported="false"
        android:grantUriPermissions="true">
      <meta-data
          android:name="android.support.FILE_PROVIDER_PATHS"
          android:resource="@xml/filepaths"/>
    </provider>
    
    
  </application>
  
</manifest>
